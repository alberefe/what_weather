[project]
name = "what_weather"
version = "0.1.0"
description = "A weather application with Redis caching and SQLite storage"
requires-python = ">=3.8"
dependencies = [
    # Core web framework
    "flask>=2.0.0",
    # External services interaction
    "requests>=2.31.0",
    # Caching
    "redis>=5.0.0",
    # For environment variables (recommended for API keys)
    "python-dotenv>=1.0.0",
    "python-telegram-bot>=21.6",
    "aiohttp>=3.10.11",
    "psycopg>=3.2.3",
    "flask-sqlalchemy>=3.1.1",
]

[project.optional-dependencies]
dev = [
    # Development tools
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["what_weather"]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["error"]

[dependency-groups]
dev = [
    "ruff>=0.9.2",
]

[tool.ruff]
# Core configuration
target-version = "py311"
line-length = 88
extend-exclude = [".venv", "venv", "env", "__pycache__", "migrations"]

# Rule selection
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
    "UP",
    "RUF",
    "N",
    "D",
    "ANN",
]

ignore = [
    "ANN101",
    "ANN102",
]

# Ruff format configuration
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Import sorting configuration
[tool.ruff.isort]
known-first-party = ["what_weather"]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

# Documentation style
[tool.ruff.pydocstyle]
convention = "google"
